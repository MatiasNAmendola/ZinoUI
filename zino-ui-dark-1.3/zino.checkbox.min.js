/*!
 * ZinoUI v1.3 (http://zinoui.com)
 * Copyright 2012-2013 Dimitar Ivanov. All Rights Reserved.
 *
 * Zino UI commercial licenses may be obtained at http://zinoui.com/license
 * If you do not own a commercial license, this file shall be governed by the
 * GNU General Public License (GPL) version 3.
 * For GPL requirements, please review: http://www.gnu.org/copyleft/gpl.html
 */
(function(c,m){function k(){this._defaults={data:[],toggle:null,focus:null,blur:null,create:null}}k.prototype={_attachCheckbox:function(b,f){if(this._getInst(b))return!1;var g,e,k,l=c(b),h=this,d=h._newInst(l);c.extend(d.settings,h._defaults,f);g=c("<ul>").attr({"class":"zui-checkbox"});e=0;for(k=d.settings.data.length;e<k;e++)c("<li>").attr({role:"checkbox","aria-checked":d.settings.data[e].checked!==m&&!0===d.settings.data[e].checked?"true":"false",tabindex:0,"class":d.settings.data[e].checked!==
m&&!0===d.settings.data[e].checked?"zui-checkbox-checked":"zui-checkbox-unchecked"}).text(d.settings.data[e].label).appendTo(g);g.appendTo(l);l.on("click.checkbox","li",function(a){if(a.ctrlKey||a.altKey||a.shiftKey)return!0;h._toggleCheckbox.call(h,b,c(this).index());a.stopPropagation();return!1}).on("keypress.checkbox","li",function(a){if(a.altKey||a.shiftKey||a.ctrlKey)return!0;switch(a.charCode?a.charCode:a.keyCode?a.keyCode:0){case 32:return a.stopPropagation(),!1}return!0}).on("keydown.checkbox",
"li",function(a){if(a.altKey||a.shiftKey||a.ctrlKey)return!0;var d=a.charCode?a.charCode:a.keyCode?a.keyCode:0,e=c(this);switch(d){case 32:return h._toggleCheckbox.call(h,b,e.index()),a.stopPropagation(),!1}return!0}).on("focus.checkbox","li",function(a){a=c(this);a.addClass("zui-checkbox-focus");a.removeClass("zui-checkbox-hover");return!0}).on("blur.checkbox","li",function(a){c(this).removeClass("zui-checkbox-focus");return!0}).on("mouseover.checkbox","li",function(a){var b=c(this);b.not(".zui-checkbox-focus")&&
b.addClass("zui-checkbox-hover");a.stopPropagation();return!1}).on("mouseout.checkbox","li",function(a){c(this).removeClass("zui-checkbox-hover");a.stopPropagation();return!1}).bind("checkboxcreate",function(a,c){null!==d.settings.create&&d.settings.create.call(b,a,c)}).bind("checkboxtoggle",function(a,c){null!==d.settings.toggle&&d.settings.toggle.call(b,a,c)}).bind("checkboxfocus",function(a,c){null!==d.settings.focus&&d.settings.focus.call(b,a,c)}).bind("checkboxblur",function(a,c){null!==d.settings.blur&&
d.settings.blur.call(b,a,c)});l.trigger("checkboxcreate",{});c.data(b,"checkbox",d)},_toggleCheckbox:function(b,f){if(!this._getInst(b))return!1;var g=c(b),e=g.find("li").eq(f);g.find("li").removeClass("zui-checkbox-focus");"true"===e.attr("aria-checked")?e.attr({"aria-checked":"false"}).removeClass("zui-checkbox-checked").addClass("zui-checkbox-unchecked").addClass("zui-checkbox-focus"):e.attr({"aria-checked":"true"}).removeClass("zui-checkbox-unchecked").addClass("zui-checkbox-checked").addClass("zui-checkbox-focus");
g.trigger("checkboxtoggle",{index:f})},_destroyCheckbox:function(b){var f=this._getInst(b),g=c(b);if(!f)return!1;g.removeClass("zui-checkbox").off(".checkbox").unbind("checkboxcreate").unbind("checkboxtoggle").unbind("checkboxfocus").unbind("checkboxblur").children().remove();c.data(b,"checkbox",!1)},_newInst:function(b){return{id:b[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1"),input:b,uid:Math.floor(99999999*Math.random()),isDisabled:!1,settings:{}}},_getInst:function(b){try{return c.data(b,"checkbox")}catch(f){throw"Missing instance data for this checkbox";
}}};c.fn.zinoCheckbox=function(b){var f=Array.prototype.slice.call(arguments,1);return"string"==typeof b&&"isDisabled"==b||"option"==b&&2==arguments.length&&"string"==typeof arguments[1]?c.zinoCheckbox["_"+b+"Checkbox"].apply(c.zinoCheckbox,[this[0]].concat(f)):this.each(function(){"string"==typeof b?c.zinoCheckbox["_"+b+"Checkbox"].apply(c.zinoCheckbox,[this].concat(f)):c.zinoCheckbox._attachCheckbox(this,b)})};c.zinoCheckbox=new k;c.zinoCheckbox.version="1.3"})(jQuery);