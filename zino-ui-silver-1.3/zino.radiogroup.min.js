/*!
 * ZinoUI v1.3 (http://zinoui.com)
 * Copyright 2012-2013 Dimitar Ivanov. All Rights Reserved.
 *
 * Zino UI commercial licenses may be obtained at http://zinoui.com/license
 * If you do not own a commercial license, this file shall be governed by the
 * GNU General Public License (GPL) version 3.
 * For GPL requirements, please review: http://www.gnu.org/copyleft/gpl.html
 */
(function(c,m){function l(){this._defaults={data:[],select:null,focus:null,blur:null,create:null};this.check=!0}l.prototype={_attachRadiogroup:function(b,e){if(this._getInst(b))return!1;var g,f,l,h=c(b),k=this,d=k._newInst(h);c.extend(d.settings,k._defaults,e);g=c("<ul>").attr({role:"radiogroup","class":"zui-radiogroup"});f=0;for(l=d.settings.data.length;f<l;f++)c("<li>").attr({role:"radio","aria-checked":d.settings.data[f].checked!==m&&!0===d.settings.data[f].checked?"true":"false",tabindex:d.settings.data[f].checked!==
m&&!0===d.settings.data[f].checked?0:-1,"class":d.settings.data[f].checked!==m&&!0===d.settings.data[f].checked?"zui-radiogroup-checked":"zui-radiogroup-unchecked"}).text(d.settings.data[f].label).appendTo(g);g.appendTo(h);h.on("click.radiogroup","li",function(a){if(a.ctrlKey||a.altKey||a.shiftKey)return!0;a.stopPropagation();return!1}).on("keypress.radiogroup","li",function(a){if(a.altKey)return!0;switch(a.charCode?a.charCode:a.keyCode?a.keyCode:0){case 13:case 32:if(a.shiftKey||a.ctrlKey)break;
break;case 37:case 38:case 39:case 40:if(a.shiftKey)break;a.stopPropagation();return!1}return!0}).on("keydown.radiogroup","li",function(a){if(a.altKey)return!0;var d=a.charCode?a.charCode:a.keyCode?a.keyCode:0,e=c(this);switch(d){case 37:case 38:if(a.shiftKey)return!0;d=e.prev();0==e.index()&&(d=h.find("li").last());a.ctrlKey&&(k.check=!1);d[0].focus();a.stopPropagation();return!1;case 39:case 40:if(a.shiftKey)return!0;var d=e.next(),f=h.find("li");e.index()==f.length-1&&(d=f.first());a.ctrlKey&&
(k.check=!1);d[0].focus();a.stopPropagation();return!1;case 13:case 32:if(a.ctrlkey||a.shiftKey)return!0;e=e.index();k._selectRadiogroup.call(k,b,e);a.stopPropagation();return!1}}).on("focus.radiogroup","li",function(a){k._selectRadiogroup.call(k,b,c(this).index());h.trigger("radiogroupfocus",{});return!0}).on("blur.radiogroup","li",function(a){c(this).removeClass("zui-radiogroup-selected");h.trigger("radiogroupblur",{});return!0}).bind("radiogroupcreate",function(a,c){null!==d.settings.create&&d.settings.create.call(b,
a,c)}).bind("radiogroupselect",function(a,c){null!==d.settings.select&&d.settings.select.call(b,a,c)}).bind("radiogroupfocus",function(a,c){null!==d.settings.focus&&d.settings.focus.call(b,a,c)}).bind("radiogroupblur",function(a,c){null!==d.settings.blur&&d.settings.blur.call(b,a,c)});h.trigger("radiogroupcreate",{});c.data(b,"radiogroup",d)},_selectRadiogroup:function(b,e){if(!this._getInst(b))return!1;var g=c(b);!0===this.check&&g.find("li").attr({"aria-checked":"false",tabindex:-1}).removeClass("zui-radiogroup-checked").addClass("zui-radiogroup-unchecked").eq(e).attr({"aria-checked":"true",
tabindex:0}).removeClass("zui-radiogroup-unchecked").addClass("zui-radiogroup-checked");this.check=!0;g.find("li").eq(e).addClass("zui-radiogroup-selected");g.trigger("radiogroupselect",{index:e})},_destroyRadiogroup:function(b){var e=this._getInst(b),g=c(b);if(!e)return!1;g.removeAttr("role").removeClass("zui-radiogroup").off(".radiogroup").unbind("radiogroupcreate").unbind("radiogroupselect").unbind("radiogroupfocus").unbind("radiogroupblur").children().remove();c.data(b,"radiogroup",!1)},_newInst:function(b){return{id:b[0].id.replace(/([^A-Za-z0-9_-])/g,
"\\\\$1"),input:b,uid:Math.floor(99999999*Math.random()),isDisabled:!1,settings:{}}},_getInst:function(b){try{return c.data(b,"radiogroup")}catch(e){throw"Missing instance data for this radiogroup";}}};c.fn.zinoRadiogroup=function(b){var e=Array.prototype.slice.call(arguments,1);return"string"==typeof b&&"isDisabled"==b||"option"==b&&2==arguments.length&&"string"==typeof arguments[1]?c.zinoRadiogroup["_"+b+"Radiogroup"].apply(c.zinoRadiogroup,[this[0]].concat(e)):this.each(function(){"string"==typeof b?
c.zinoRadiogroup["_"+b+"Radiogroup"].apply(c.zinoRadiogroup,[this].concat(e)):c.zinoRadiogroup._attachRadiogroup(this,b)})};c.zinoRadiogroup=new l;c.zinoRadiogroup.version="1.3"})(jQuery);